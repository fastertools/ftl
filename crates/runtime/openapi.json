{
  "openapi": "3.0.3",
  "info": {
    "title": "FTL AWS API",
    "version": "1.0.0",
    "description": "API for deploying and managing applications on the Fermyon Platform",
    "contact": {
      "name": "API Support",
      "email": "mashh.labs@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://vnwyancgjj.execute-api.us-west-2.amazonaws.com",
      "description": "Production API"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Apps",
      "description": "Multi-tenant application management with automatic provisioning"
    },
    {
      "name": "Registry",
      "description": "Multi-tenant ECR repository and credentials management"
    },
    {
      "name": "User",
      "description": "User and organization management endpoints"
    }
  ],
  "externalDocs": {
    "description": "Fermyon Platform Documentation",
    "url": "https://developer.fermyon.com/cloud"
  },
  "paths": {
    "/v1/apps": {
      "get": {
        "operationId": "listApps",
        "summary": "List applications",
        "description": "Retrieves a paginated list of all applications for the authenticated user",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "Number of items to return (1-100)",
              "example": 20,
              "default": 20,
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "required": false,
            "description": "Number of items to return (1-100)"
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "description": "Pagination token from previous response",
              "type": "string"
            },
            "required": false,
            "description": "Pagination token from previous response"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Filter by app name",
              "type": "string"
            },
            "required": false,
            "description": "Filter by app name"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAppsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createApp",
        "summary": "Create a new application",
        "description": "Creates a new application resource. The app can then be deployed by calling the deployment endpoint.",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Application created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAppResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - app name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}/deployments": {
      "post": {
        "operationId": "createDeployment",
        "summary": "Create a new deployment",
        "description": "Triggers a new deployment for an application. If the app does not exist, it will be created automatically. This operation is asynchronous and returns immediately while the deployment runs in the background.",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeploymentRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Deployment accepted and initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeploymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid authorization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}": {
      "get": {
        "operationId": "getApp",
        "summary": "Get application details",
        "description": "Retrieves detailed information for a specific application by ID",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "responses": {
          "200": {
            "description": "Application details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteApp",
        "summary": "Delete an application",
        "description": "Permanently deletes an application and triggers cleanup on the provider",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "responses": {
          "202": {
            "description": "Application deletion initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAppResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/registry/tokens": {
      "post": {
        "operationId": "createEcrToken",
        "summary": "Create ECR authorization token",
        "description": "Creates a temporary ECR authorization token for pushing container images to ECR repositories under the specified app namespace",
        "tags": ["Registry"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEcrTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ECR token created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEcrTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/orgs": {
      "get": {
        "operationId": "getUserOrgs",
        "summary": "Get user organizations",
        "description": "Retrieves a list of organizations the authenticated user belongs to",
        "tags": ["User"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Organizations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserOrgsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}/components": {
      "get": {
        "operationId": "listAppComponents",
        "summary": "List components for an app",
        "description": "Retrieves a list of all components for a specific application",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of components retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListComponentsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateComponents",
        "summary": "Update components for an app",
        "description": "Sets the desired state of components for an application. Components not in the list will be removed. This is an idempotent operation.",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComponentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Components updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateComponentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}/logs": {
      "get": {
        "operationId": "getAppLogs",
        "summary": "Get application logs",
        "description": "Retrieves recent logs for an application from the underlying platform",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          },
          {
            "in": "query",
            "name": "since",
            "schema": {
              "description": "Time range for logs (e.g., \"30m\", \"1h\", \"7d\", or RFC3339/Unix timestamp)",
              "example": "1h",
              "default": "7d",
              "type": "string"
            },
            "required": false,
            "description": "Time range for logs (e.g., \"30m\", \"1h\", \"7d\", or RFC3339/Unix timestamp)"
          },
          {
            "in": "query",
            "name": "tail",
            "schema": {
              "description": "Number of log lines from the end (1-1000)",
              "example": "100",
              "default": "100",
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": false,
            "description": "Number of log lines from the end (1-1000)"
          }
        ],
        "responses": {
          "200": {
            "description": "Logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppLogsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - app belongs to another tenant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateAppRequest": {
        "description": "Request body for creating an app",
        "type": "object",
        "properties": {
          "appName": {
            "description": "The name of the application",
            "type": "string",
            "minLength": 1,
            "maxLength": 63
          },
          "accessControl": {
            "description": "Access control mode for the application",
            "default": "private",
            "type": "string",
            "enum": ["public", "private", "org", "custom"]
          }
        },
        "required": ["appName"]
      },
      "CreateDeploymentRequest": {
        "description": "Request body for creating a deployment",
        "type": "object",
        "properties": {
          "components": {
            "description": "List of components to deploy with the application",
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "componentName": {
                  "description": "Component name",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 50
                },
                "tag": {
                  "description": "Component version tag",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128
                },
                "allowedHosts": {
                  "description": "Allowed host patterns for the component",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": ["componentName", "tag"]
            }
          },
          "variables": {
            "description": "Environment variables as key-value pairs",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "accessControl": {
            "description": "Access control mode for the application",
            "type": "string",
            "enum": ["public", "private", "org", "custom"]
          },
          "customAuthConfig": {
            "description": "Custom auth configuration with all MCP auth variables (required when accessControl is \"custom\")",
            "type": "object",
            "properties": {
              "provider": {
                "description": "Auth provider type: jwt, oauth, static, etc.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "issuer": {
                "description": "Token issuer URL",
                "type": "string",
                "minLength": 1
              },
              "audience": {
                "description": "Expected audience for tokens",
                "type": "string",
                "minLength": 1
              },
              "jwksUri": {
                "type": "string"
              },
              "publicKey": {
                "type": "string"
              },
              "algorithm": {
                "type": "string"
              },
              "requiredScopes": {
                "type": "string"
              },
              "authorizeEndpoint": {
                "type": "string"
              },
              "tokenEndpoint": {
                "type": "string"
              },
              "userinfoEndpoint": {
                "type": "string"
              },
              "allowedSubjects": {
                "type": "string"
              },
              "allowedIssuers": {
                "type": "string"
              },
              "requiredClaims": {
                "type": "string"
              },
              "authRequiredScopes": {
                "type": "string"
              },
              "forwardClaims": {
                "type": "string"
              }
            },
            "required": ["provider", "issuer", "audience"]
          },
          "subs": {
            "description": "List of authorized user emails for org access control (will be resolved to user IDs)",
            "type": "array",
            "items": {
              "type": "string",
              "format": "email",
              "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
            }
          }
        },
        "required": ["components"]
      },
      "CreateEcrTokenRequest": {
        "description": "Request body for creating ECR token",
        "type": "object",
        "properties": {
          "appId": {
            "description": "Application ID to create ECR token for",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          }
        },
        "required": ["appId"]
      },
      "UpdateComponentsRequest": {
        "description": "Request body for updating components",
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "componentName": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 50,
                  "pattern": "^[a-zA-Z0-9_-]+$"
                },
                "description": {
                  "type": "string",
                  "maxLength": 500
                }
              },
              "required": ["componentName"]
            }
          }
        },
        "required": ["components"]
      },
      "ListAppsResponse": {
        "description": "List of applications with pagination",
        "type": "object",
        "properties": {
          "apps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "appId": {
                  "type": "string",
                  "format": "uuid",
                  "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                },
                "appName": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": ["PENDING", "CREATING", "ACTIVE", "FAILED", "DELETING", "DELETED"]
                },
                "providerUrl": {
                  "type": "string",
                  "format": "uri"
                },
                "providerError": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              },
              "required": ["appId", "appName", "status", "createdAt", "updatedAt"],
              "additionalProperties": false
            }
          },
          "nextToken": {
            "type": "string"
          }
        },
        "required": ["apps"],
        "additionalProperties": false
      },
      "ErrorResponse": {
        "description": "Standard error response format",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {}
          }
        },
        "required": ["message"],
        "additionalProperties": false
      },
      "CreateAppResponse": {
        "description": "Response for successful app creation",
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "CREATING", "ACTIVE", "FAILED", "DELETING", "DELETED"]
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": ["appId", "appName", "status", "createdAt", "updatedAt"],
        "additionalProperties": false
      },
      "CreateDeploymentResponse": {
        "description": "Response for successful deployment creation",
        "type": "object",
        "properties": {
          "deploymentId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "const": "DEPLOYING"
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["deploymentId", "appId", "appName", "status", "message"],
        "additionalProperties": false
      },
      "App": {
        "description": "Application object",
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "CREATING", "ACTIVE", "FAILED", "DELETING", "DELETED"]
          },
          "providerUrl": {
            "type": "string",
            "format": "uri"
          },
          "providerError": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": ["appId", "appName", "status", "createdAt", "updatedAt"],
        "additionalProperties": false
      },
      "DeleteAppResponse": {
        "description": "Response for successful app deletion",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"],
        "additionalProperties": false
      },
      "CreateEcrTokenResponse": {
        "description": "ECR token response",
        "type": "object",
        "properties": {
          "registryUri": {
            "type": "string"
          },
          "authorizationToken": {
            "type": "string"
          },
          "proxyEndpoint": {
            "type": "string",
            "format": "uri"
          },
          "expiresAt": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        },
        "required": ["registryUri", "authorizationToken", "proxyEndpoint", "expiresAt", "region"],
        "additionalProperties": false
      },
      "GetUserOrgsResponse": {
        "description": "List of user organizations",
        "type": "object",
        "properties": {
          "organizations": {
            "description": "List of organizations the user belongs to",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Organization ID from WorkOS",
                  "type": "string"
                },
                "name": {
                  "description": "Organization name",
                  "type": "string"
                }
              },
              "required": ["id", "name"],
              "additionalProperties": false
            }
          }
        },
        "required": ["organizations"],
        "additionalProperties": false
      },
      "ListComponentsResponse": {
        "description": "List of components for an app",
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appName": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "componentName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "repositoryUri": {
                  "type": "string"
                },
                "repositoryName": {
                  "type": "string"
                }
              },
              "required": ["componentName"],
              "additionalProperties": false
            }
          }
        },
        "required": ["appId", "appName", "components"],
        "additionalProperties": false
      },
      "UpdateComponentsResponse": {
        "description": "Response for successful components update",
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "componentName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "repositoryUri": {
                  "type": "string"
                },
                "repositoryName": {
                  "type": "string"
                }
              },
              "required": ["componentName"],
              "additionalProperties": false
            }
          },
          "changes": {
            "type": "object",
            "properties": {
              "created": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updated": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "removed": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": ["created", "updated", "removed"],
            "additionalProperties": false
          }
        },
        "required": ["components", "changes"],
        "additionalProperties": false
      },
      "GetAppLogsResponse": {
        "description": "Application logs response",
        "type": "object",
        "properties": {
          "appId": {
            "description": "Application ID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "logs": {
            "description": "Raw log output from the application",
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "tail": {
                "description": "Number of lines requested",
                "type": "number"
              },
              "since": {
                "description": "Time range used for the query",
                "type": "string"
              }
            },
            "required": ["tail", "since"],
            "additionalProperties": false
          }
        },
        "required": ["appId", "logs", "metadata"],
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "WorkOS JWT authentication token"
      }
    }
  }
}
