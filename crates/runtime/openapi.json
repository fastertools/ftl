{
  "openapi": "3.0.3",
  "info": {
    "title": "FTL AWS API",
    "version": "1.0.0",
    "description": "API for deploying and managing applications on the Fermyon Platform",
    "contact": {
      "name": "API Support",
      "email": "mashh.labs@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://raj3cibkjk.execute-api.us-west-2.amazonaws.com",
      "description": "Production API"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Apps",
      "description": "Multi-tenant application management with automatic provisioning"
    },
    {
      "name": "Registry",
      "description": "Multi-tenant ECR repository and credentials management"
    }
  ],
  "externalDocs": {
    "description": "Fermyon Platform Documentation",
    "url": "https://developer.fermyon.com/cloud"
  },
  "paths": {
    "/v1/apps": {
      "get": {
        "operationId": "listApps",
        "summary": "List applications",
        "description": "Retrieves a paginated list of all applications for the authenticated user",
        "tags": [
          "Apps"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "Number of items to return (1-100)",
              "example": 20,
              "default": 20,
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "required": false,
            "description": "Number of items to return (1-100)"
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "description": "Pagination token from previous response",
              "type": "string"
            },
            "required": false,
            "description": "Pagination token from previous response"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Filter by app name",
              "type": "string"
            },
            "required": false,
            "description": "Filter by app name"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAppsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createApp",
        "summary": "Create a new application",
        "description": "Creates a new application resource. The app can then be deployed by calling the deployment endpoint.",
        "tags": [
          "Apps"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Application created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAppResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - app name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}/deployments": {
      "post": {
        "operationId": "createDeployment",
        "summary": "Create a new deployment",
        "description": "Triggers a new deployment for an application. If the app does not exist, it will be created automatically. This operation is asynchronous and returns immediately while the deployment runs in the background.",
        "tags": [
          "Apps"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeploymentRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Deployment accepted and initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeploymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid authorization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}": {
      "get": {
        "operationId": "getApp",
        "summary": "Get application details",
        "description": "Retrieves detailed information for a specific application by ID",
        "tags": [
          "Apps"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "responses": {
          "200": {
            "description": "Application details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteApp",
        "summary": "Delete an application",
        "description": "Permanently deletes an application and triggers cleanup on the provider",
        "tags": [
          "Apps"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "responses": {
          "202": {
            "description": "Application deletion initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAppResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/registry/repositories": {
      "post": {
        "operationId": "createEcrRepository",
        "summary": "Create ECR repository",
        "description": "Creates an ECR repository for storing container images for a specific tool in the authenticated tenant namespace",
        "tags": [
          "Registry"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEcrRepositoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Repository created successfully or already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEcrRepositoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/registry/tokens": {
      "post": {
        "operationId": "createEcrToken",
        "summary": "Create ECR authorization token",
        "description": "Creates a temporary ECR authorization token for pushing container images to ECR repositories in the authenticated tenant namespace",
        "tags": [
          "Registry"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "ECR token created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEcrTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateAppRequest": {
        "description": "Request body for creating an app",
        "type": "object",
        "properties": {
          "appName": {
            "description": "The name of the application",
            "type": "string",
            "minLength": 1,
            "maxLength": 63
          }
        },
        "required": [
          "appName"
        ]
      },
      "CreateDeploymentRequest": {
        "description": "Request body for creating a deployment",
        "type": "object",
        "properties": {
          "tools": {
            "description": "List of tools to deploy with the application",
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Tool name identifier",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 100
                },
                "tag": {
                  "description": "Tool version tag",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128
                },
                "allowedHosts": {
                  "description": "Allowed host patterns for the tool",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name",
                "tag"
              ]
            }
          },
          "variables": {
            "description": "Environment variables as key-value pairs",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "tools"
        ]
      },
      "CreateEcrRepositoryRequest": {
        "description": "Request body for creating an ECR repository",
        "type": "object",
        "properties": {
          "toolName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]+$"
          }
        },
        "required": [
          "toolName"
        ]
      },
      "ListAppsResponse": {
        "description": "List of applications with pagination",
        "type": "object",
        "properties": {
          "apps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "appId": {
                  "type": "string",
                  "format": "uuid",
                  "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                },
                "appName": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "CREATING",
                    "ACTIVE",
                    "FAILED",
                    "DELETING",
                    "DELETED"
                  ]
                },
                "providerUrl": {
                  "type": "string",
                  "format": "uri"
                },
                "providerError": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              },
              "required": [
                "appId",
                "appName",
                "status",
                "createdAt",
                "updatedAt"
              ],
              "additionalProperties": false
            }
          },
          "nextToken": {
            "type": "string"
          }
        },
        "required": [
          "apps"
        ],
        "additionalProperties": false
      },
      "ErrorResponse": {
        "description": "Standard error response format",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "message"
        ],
        "additionalProperties": false
      },
      "CreateAppResponse": {
        "description": "Response for successful app creation",
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "CREATING",
              "ACTIVE",
              "FAILED",
              "DELETING",
              "DELETED"
            ]
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "appId",
          "appName",
          "status",
          "createdAt",
          "updatedAt"
        ],
        "additionalProperties": false
      },
      "CreateDeploymentResponse": {
        "description": "Response for successful deployment creation",
        "type": "object",
        "properties": {
          "deploymentId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "const": "DEPLOYING"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "deploymentId",
          "appId",
          "appName",
          "status",
          "message"
        ],
        "additionalProperties": false
      },
      "App": {
        "description": "Application object",
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "CREATING",
              "ACTIVE",
              "FAILED",
              "DELETING",
              "DELETED"
            ]
          },
          "providerUrl": {
            "type": "string",
            "format": "uri"
          },
          "providerError": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "appId",
          "appName",
          "status",
          "createdAt",
          "updatedAt"
        ],
        "additionalProperties": false
      },
      "DeleteAppResponse": {
        "description": "Response for successful app deletion",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "additionalProperties": false
      },
      "CreateEcrRepositoryResponse": {
        "description": "Response for successful repository creation",
        "type": "object",
        "properties": {
          "repositoryUri": {
            "type": "string"
          },
          "repositoryName": {
            "type": "string"
          },
          "alreadyExists": {
            "type": "boolean"
          }
        },
        "required": [
          "repositoryUri",
          "repositoryName",
          "alreadyExists"
        ],
        "additionalProperties": false
      },
      "CreateEcrTokenResponse": {
        "description": "ECR token response",
        "type": "object",
        "properties": {
          "registryUri": {
            "type": "string"
          },
          "authorizationToken": {
            "type": "string"
          },
          "proxyEndpoint": {
            "type": "string",
            "format": "uri"
          },
          "expiresAt": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        },
        "required": [
          "registryUri",
          "authorizationToken",
          "proxyEndpoint",
          "expiresAt",
          "region"
        ],
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "WorkOS JWT authentication token"
      }
    }
  }
}
