// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"time"
)

// Project represents a project in the system
type Project struct {
	Name         string
	Path         string
	Status       string
	LastUpdated  time.Time
	FTLRunning   bool
	WatchRunning bool
}

// ServerStatus represents the server's current status
type ServerStatus struct {
	Running     bool
	ProcessID   int
	Port        int
	LastChecked time.Time
}

// ProcessStatus represents the status of FTL processes
type ProcessStatus struct {
	FTLRunning   bool
	WatchRunning bool
	LastActivity time.Time
}

// LogEntry represents a single log entry
type LogEntry struct {
	ID        int
	Timestamp time.Time
	Level     string
	Message   string
}

// CommandOutput represents output from an executed command
type CommandOutput struct {
	Command   string
	Output    string
	Timestamp time.Time
	Success   bool
}

// DashboardData holds all data needed for the dashboard
type DashboardData struct {
	CurrentProject Project
	AllProjects    []Project
	ServerStatus   ServerStatus
	ProcessStatus  ProcessStatus
	RecentLogs     []LogEntry
	CommandHistory []CommandOutput
}

// Layout renders the main dashboard layout with professional dark theme
func Layout(data DashboardData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\" class=\"h-full\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>FTL Control Center</title><script src=\"https://cdn.jsdelivr.net/npm/htmx.org@2.0.6/dist/htmx.min.js\" integrity=\"sha384-Akqfrbj/HpNVo8k11SXBb6TlBWmXXlYQrCSqEWmyKJe+hDm3Z/B2WVG4smwBkRVm\" crossorigin=\"anonymous\"></script><script src=\"https://unpkg.com/htmx.org@2.0.6/dist/ext/json-enc.js\"></script><script src=\"https://cdn.tailwindcss.com\"></script><script>\n\t\t\ttailwind.config = {\n\t\t\t\ttheme: {\n\t\t\t\t\textend: {\n\t\t\t\t\t\tcolors: {\n\t\t\t\t\t\t\t'bg-primary': '#1a1a1a',\n\t\t\t\t\t\t\t'bg-secondary': '#2a2a2a',\n\t\t\t\t\t\t\t'bg-tertiary': '#3a3a3a',\n\t\t\t\t\t\t\t'text-primary': '#ffffff',\n\t\t\t\t\t\t\t'text-secondary': '#a0a0a0',\n\t\t\t\t\t\t\t'accent-green': '#22c55e',\n\t\t\t\t\t\t\t'accent-blue': '#3b82f6',\n\t\t\t\t\t\t\t'accent-orange': '#f97316',\n\t\t\t\t\t\t\t'accent-red': '#ef4444'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t</script><style>\n\t\t\tbody {\n\t\t\t\tbackground: #1a1a1a;\n\t\t\t\tcolor: #ffffff;\n\t\t\t\tfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n\t\t\t}\n\t\t\t\n\t\t\t.panel {\n\t\t\t\tbackground: #2a2a2a;\n\t\t\t\tborder: 1px solid #3a3a3a;\n\t\t\t\tborder-radius: 8px;\n\t\t\t}\n\t\t\t\n\t\t\t.sidebar {\n\t\t\t\tbackground: #1e1e1e;\n\t\t\t\tborder-right: 1px solid #3a3a3a;\n\t\t\t}\n\t\t\t\n\t\t\t.status-dot {\n\t\t\t\twidth: 8px;\n\t\t\t\theight: 8px;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmargin-right: 8px;\n\t\t\t}\n\t\t\t\n\t\t\t.status-running { background-color: #22c55e; }\n\t\t\t.status-stopped { background-color: #ef4444; }\n\t\t\t.status-warning { background-color: #f97316; }\n\t\t</style></head><body class=\"h-full flex\" style=\"background-color: #1a1a1a;\"><div id=\"main-container\" class=\"h-full flex w-full\"><!-- Sidebar --><div class=\"sidebar w-64 h-full flex flex-col\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = SidebarWithProjects(data.AllProjects, data.CurrentProject.Path).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div><!-- Main Content Area --><div class=\"flex-1 h-full flex flex-col\"><!-- Header --><header class=\"border-b\" style=\"border-color: #3a3a3a; background-color: #2a2a2a;\"><div class=\"px-6 py-4\"><p class=\"text-sm\" style=\"color: #a0a0a0;\">Project: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(data.CurrentProject.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `layout.templ`, Line: 132, Col: 41}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, " <span class=\"status-dot status-running\"></span> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(data.CurrentProject.Status)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `layout.templ`, Line: 134, Col: 34}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</p></div></header><!-- Operation Feedback Area --><div id=\"operation-feedback\" class=\"mx-6 mt-4\"><!-- Operation messages appear here --></div><!-- Dashboard Grid - 2 Panel Top Layout --><div class=\"p-6 pb-3 grid grid-cols-2 gap-6\"><!-- Info Panel (Left) --><div class=\"panel p-6\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = InfoPanel(data.CurrentProject, data.ServerStatus).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div><!-- Control Center (Right - Status + Controls) --><div class=\"panel p-6\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ControlCenter(data.CurrentProject, data.ProcessStatus, data.ServerStatus, data.CommandHistory).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</div></div><!-- Activity Panel (Full Width Bottom) --><div class=\"px-6 pb-6\"><div class=\"panel p-6\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ActivityPanel(data.CurrentProject, data.RecentLogs, data.CommandHistory).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</div></div></div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
