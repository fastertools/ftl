package templates

import (
	"fmt"
	"github.com/fastertools/ftl/internal/mcpclient"
)

// ToolsList displays the list of available tools from running servers
templ ToolsList(project Project, tools []*mcpclient.Tool, hash string) {
	<div data-tools-hash={ hash }>
		<h3 class="text-sm font-medium mb-2" style="color: #a0a0a0;">Available Tools</h3>
		if len(tools) == 0 {
			<div class="text-sm" style="color: #666666;">No tools available</div>
		} else {
			<div class="space-y-2">
				for i, tool := range tools {
					<div class="p-2 rounded" style="background-color: #333333;">
						<div class="flex items-center justify-between">
							<div class="flex-1">
								<div class="text-sm font-medium text-white">{ tool.Name }</div>
								if tool.Description != "" {
									<div class="text-xs mt-1" style="color: #a0a0a0;">{ tool.Description }</div>
								}
							</div>
							if tool.InputSchema != nil {
								<button 
									hx-get={ fmt.Sprintf("/tool-params/%d", i) }
									hx-target={ fmt.Sprintf("#tool-params-%d", i) }
									hx-swap="innerHTML"
									class="text-xs px-2 py-1 rounded hover:bg-gray-600 transition-colors"
									style="background-color: #4a4a4a; color: #a0a0a0;"
								>
									Parameters
								</button>
							}
						</div>
						<div id={ fmt.Sprintf("tool-params-%d", i) } hx-preserve="true"></div>
					</div>
				}
			</div>
		}
	</div>
}

// ToolParams displays the parameters for a specific tool
templ ToolParams(tool *mcpclient.Tool, index int) {
	<div class="mt-2 p-2 rounded" style="background-color: #2a2a2a;">
		<div class="text-xs font-medium mb-2" style="color: #a0a0a0;">Parameters:</div>
		if tool.InputSchema != nil {
			<pre class="text-xs overflow-x-auto" style="color: #888888;">{ fmt.Sprintf("%+v", tool.InputSchema) }</pre>
		} else {
			<div class="text-xs" style="color: #666666;">No parameters</div>
		}
	</div>
}