// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// No additional imports needed for ActivityPanel

// ActivityPanel displays recent activity and logs with live polling in a tabbed interface
func ActivityPanel(project Project, recentLogs []LogEntry, commandHistory []CommandOutput) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div><div class=\"flex items-center justify-between mb-4\"><h2 class=\"text-lg font-semibold text-white\">Activity</h2></div><!-- Tab Navigation --><div class=\"flex border-b\" style=\"border-color: #3a3a3a;\"><button id=\"logs-tab\" class=\"px-4 py-2 text-sm font-medium border-b-2 border-blue-500 text-white\" onclick=\"switchTab('logs')\">Live Logs</button> <button id=\"commands-tab\" class=\"px-4 py-2 text-sm font-medium border-b-2 border-transparent\" style=\"color: #a0a0a0;\" onclick=\"switchTab('commands')\">Command Output</button></div><!-- Tab Content --><div id=\"tab-content\" class=\"mt-4\"><!-- Live Logs Tab (default) --><div id=\"logs-content\"><div id=\"live-log-content\" class=\"bg-black rounded-lg p-3 font-mono text-xs overflow-hidden\" style=\"min-height: 200px; max-height: 350px; overflow-y: auto;\" hx-post=\"/htmx/logs/poll\" hx-trigger=\"every 2s\" hx-include=\"[name='project_path']\" hx-target=\"this\" hx-swap=\"beforeend\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(recentLogs) > 0 {
			for _, logEntry := range recentLogs {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"text-green-400\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var2 string
				templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(logEntry.Message)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `activity.templ`, Line: 47, Col: 53}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<div class=\"text-green-400\">Waiting for log output...</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div><!-- Hidden input for project path --><input type=\"hidden\" name=\"project_path\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(project.Path)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `activity.templ`, Line: 54, Col: 65}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "\"><!-- Log Controls --><div class=\"mt-3 flex items-center justify-between\"><div class=\"flex items-center space-x-2\"><button onclick=\"document.getElementById('live-log-content').innerHTML = ''\" class=\"text-xs px-2 py-1 rounded hover:bg-gray-800 transition-colors\" style=\"color: #a0a0a0;\">Clear</button> <button onclick=\"document.getElementById('live-log-content').scrollTop = document.getElementById('live-log-content').scrollHeight\" class=\"text-xs px-2 py-1 rounded hover:bg-gray-800 transition-colors\" style=\"color: #a0a0a0;\">Scroll to Bottom</button></div></div></div><!-- Command Output Tab (hidden by default) --><div id=\"commands-content\" style=\"display: none;\"><div id=\"ftl-output\" class=\"bg-black rounded-lg p-3 font-mono text-xs overflow-hidden\" style=\"min-height: 200px; max-height: 350px; overflow-y: auto;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(commandHistory) > 0 {
			for _, cmd := range commandHistory {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"mb-2\"><div class=\"text-yellow-400\">&gt; ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(cmd.Command)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `activity.templ`, Line: 87, Col: 55}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</div><div class=\"text-green-400 whitespace-pre-wrap\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(cmd.Output)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `activity.templ`, Line: 88, Col: 68}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "<div class=\"text-green-400\">Ready to execute commands...</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</div></div></div><!-- Tab switching script --><script>\n\t\t\tfunction switchTab(tab) {\n\t\t\t\t// Hide all content\n\t\t\t\tdocument.getElementById('logs-content').style.display = 'none';\n\t\t\t\tdocument.getElementById('commands-content').style.display = 'none';\n\t\t\t\t\n\t\t\t\t// Reset all tab styles\n\t\t\t\tdocument.getElementById('logs-tab').className = 'px-4 py-2 text-sm font-medium border-b-2 border-transparent';\n\t\t\t\tdocument.getElementById('logs-tab').style.color = '#a0a0a0';\n\t\t\t\tdocument.getElementById('commands-tab').className = 'px-4 py-2 text-sm font-medium border-b-2 border-transparent';\n\t\t\t\tdocument.getElementById('commands-tab').style.color = '#a0a0a0';\n\t\t\t\t\n\t\t\t\t// Show selected content and update tab style\n\t\t\t\tif (tab === 'logs') {\n\t\t\t\t\tdocument.getElementById('logs-content').style.display = 'block';\n\t\t\t\t\tdocument.getElementById('logs-tab').className = 'px-4 py-2 text-sm font-medium border-b-2 border-blue-500 text-white';\n\t\t\t\t\tdocument.getElementById('logs-tab').style.color = '';\n\t\t\t\t} else if (tab === 'commands') {\n\t\t\t\t\tdocument.getElementById('commands-content').style.display = 'block';\n\t\t\t\t\tdocument.getElementById('commands-tab').className = 'px-4 py-2 text-sm font-medium border-b-2 border-blue-500 text-white';\n\t\t\t\t\tdocument.getElementById('commands-tab').style.color = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Listen for HTMX events to auto-switch to command tab when commands are executed\n\t\t\tdocument.body.addEventListener('htmx:afterRequest', function(evt) {\n\t\t\t\tif (evt.detail.target && evt.detail.target.id === 'ftl-output') {\n\t\t\t\t\tswitchTab('commands');\n\t\t\t\t}\n\t\t\t});\n\t\t</script></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
