name: 'Setup FTL CLI'
description: 'Install FTL CLI for building and deploying MCP servers'
author: 'FasterTools'
branding:
  icon: 'cloud'
  color: 'blue'

inputs:
  version:
    description: 'FTL CLI version to install (default: latest)'
    required: false
    default: 'latest'
  
  install-dependencies:
    description: 'Install dependencies (Spin, wkg, Docker) automatically'
    required: false
    default: 'true'
  
  cache-dependencies:
    description: 'Cache installed dependencies'
    required: false
    default: 'true'

outputs:
  ftl-version:
    description: 'The installed FTL CLI version'
    value: ${{ steps.verify.outputs.ftl-version }}

runs:
  using: 'composite'
  steps:
    - name: Setup cache key
      id: cache-key
      shell: bash
      run: |
        # Create cache key based on OS, version, and dependencies flag
        CACHE_KEY="ftl-cli-${{ runner.os }}-${{ inputs.version }}-deps-${{ inputs.install-dependencies }}"
        echo "cache-key=${CACHE_KEY}" >> $GITHUB_OUTPUT

    - name: Cache FTL CLI and dependencies
      if: inputs.cache-dependencies == 'true'
      uses: actions/cache@v4
      id: cache
      with:
        path: |
          ~/.local/bin/ftl
          ~/.local/bin/spin  
          ~/.local/bin/wkg
          ~/.cache/ftl
        key: ${{ steps.cache-key.outputs.cache-key }}
        restore-keys: |
          ftl-cli-${{ runner.os }}-${{ inputs.version }}-
          ftl-cli-${{ runner.os }}-

    - name: Install system dependencies
      if: inputs.install-dependencies == 'true' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "🔧 Installing system dependencies..."
        
        case "${{ runner.os }}" in
          Linux)
            # Update package list
            sudo apt-get update
            
            # Install required packages
            sudo apt-get install -y curl wget docker.io
            
            # Start Docker service
            sudo systemctl start docker
            sudo usermod -aG docker $USER
            ;;
          macOS)
            # Docker Desktop should be available in macOS runners
            echo "Docker should be pre-installed on macOS runners"
            ;;
          *)
            echo "❌ Unsupported OS: ${{ runner.os }}"
            exit 1
            ;;
        esac
        
        echo "✅ System dependencies installed"

    - name: Install FTL CLI
      id: install
      shell: bash
      run: |
        echo "📦 Installing FTL CLI..."
        
        # Skip if cached and exists
        if [ "${{ inputs.cache-dependencies }}" = "true" ] && [ "${{ steps.cache.outputs.cache-hit }}" = "true" ] && command -v ftl >/dev/null 2>&1; then
          echo "✅ FTL CLI found in cache"
          exit 0
        fi
        
        # Create local bin directory
        mkdir -p ~/.local/bin
        
        # Determine download URL and version
        if [ "${{ inputs.version }}" = "latest" ]; then
          # Get latest version from GitHub API
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/fastertools/ftl-cli/releases | jq -r '.[] | select(.tag_name | startswith("cli-v")) | .tag_name' | head -1)
          VERSION=${LATEST_RELEASE#cli-v}
          TAG_NAME=${LATEST_RELEASE}
        else
          VERSION="${{ inputs.version }}"
          TAG_NAME="cli-v${VERSION}"
        fi
        
        echo "Installing FTL CLI version: ${VERSION}"
        
        # Detect platform
        case "${{ runner.os }}" in
          Linux)
            case "${{ runner.arch }}" in
              X64) PLATFORM="x86_64-unknown-linux-gnu" ;;
              ARM64) PLATFORM="aarch64-unknown-linux-gnu" ;;
              *) echo "❌ Unsupported architecture: ${{ runner.arch }}"; exit 1 ;;
            esac
            ;;
          macOS)
            case "${{ runner.arch }}" in
              X64) PLATFORM="x86_64-apple-darwin" ;;
              ARM64) PLATFORM="aarch64-apple-darwin" ;;
              *) echo "❌ Unsupported architecture: ${{ runner.arch }}"; exit 1 ;;
            esac
            ;;
          *)
            echo "❌ Unsupported OS: ${{ runner.os }}"
            exit 1
            ;;
        esac
        
        # Download FTL CLI binary
        ASSET_NAME="ftl-${PLATFORM}"
        DOWNLOAD_URL="https://github.com/fastertools/ftl-cli/releases/download/${TAG_NAME}/${ASSET_NAME}"
        
        echo "Downloading from: ${DOWNLOAD_URL}"
        curl -fsSL "${DOWNLOAD_URL}" -o ~/.local/bin/ftl
        
        # Make executable
        chmod +x ~/.local/bin/ftl
        
        # Add to PATH
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
        echo "✅ FTL CLI installed"

    - name: Install Spin
      if: inputs.install-dependencies == 'true' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "📦 Installing Spin WebAssembly runtime..."
        
        # Skip if already installed
        if command -v spin >/dev/null 2>&1; then
          echo "✅ Spin already installed"
          exit 0
        fi
        
        # Download and install Spin
        case "${{ runner.os }}" in
          Linux)
            curl -fsSL https://developer.fermyon.com/downloads/fwf_install.sh | bash
            ;;
          macOS)
            curl -fsSL https://wasm-functions.fermyon.app/downloads/install.sh | bash
            ;;
        esac
        
        # Move to local bin and add to PATH
        mv ./spin ~/.local/bin/spin
        chmod +x ~/.local/bin/spin
        
        # Verify installation
        ~/.local/bin/spin --version
        echo "✅ Spin installed successfully"

    - name: Install wkg
      if: inputs.install-dependencies == 'true' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "📦 Installing wkg (WebAssembly package tool)..."
        
        # Skip if already installed  
        if command -v wkg >/dev/null 2>&1; then
          echo "✅ wkg already installed"
          exit 0
        fi
        
        # Try cargo first (if available)
        if command -v cargo >/dev/null 2>&1; then
          cargo install wkg
          echo "✅ wkg installed via cargo"
          exit 0
        fi
        
        # Fallback to binary download
        WKG_VERSION="0.11.0"
        
        case "${{ runner.os }}" in
          Linux)
            case "${{ runner.arch }}" in
              X64) WKG_PLATFORM="x86_64-unknown-linux-gnu" ;;
              ARM64) WKG_PLATFORM="aarch64-unknown-linux-gnu" ;;
            esac
            ;;
          macOS)
            case "${{ runner.arch }}" in
              X64) WKG_PLATFORM="x86_64-apple-darwin" ;;
              ARM64) WKG_PLATFORM="aarch64-apple-darwin" ;;
            esac
            ;;
        esac
        
        WKG_URL="https://github.com/bytecodealliance/wasm-pkg-tools/releases/download/v${WKG_VERSION}/wkg-${WKG_PLATFORM}"
        
        echo "Downloading wkg from: ${WKG_URL}"
        curl -fsSL "${WKG_URL}" -o ~/.local/bin/wkg
        chmod +x ~/.local/bin/wkg
        
        # Verify installation
        ~/.local/bin/wkg --version
        echo "✅ wkg installed successfully"

    - name: Verify FTL CLI installation
      id: verify
      shell: bash
      run: |
        echo "🔍 Verifying FTL CLI installation..."
        
        # Check if ftl command is available
        if ! command -v ftl >/dev/null 2>&1; then
          echo "❌ FTL CLI not found in PATH"
          exit 1
        fi
        
        # Get version and verify it works
        FTL_VERSION_OUTPUT=$(ftl --version)
        echo "✅ FTL CLI installed: ${FTL_VERSION_OUTPUT}"
        
        # Extract version number for output
        FTL_VERSION=$(echo "${FTL_VERSION_OUTPUT}" | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
        echo "ftl-version=${FTL_VERSION}" >> $GITHUB_OUTPUT
        
        # Show what's available
        echo ""
        echo "🔍 Checking dependencies..."
        
        if command -v spin >/dev/null 2>&1; then
          echo "✅ Spin: $(spin --version)"
        else
          echo "⚠️  Spin not installed"
        fi
        
        if command -v wkg >/dev/null 2>&1; then
          echo "✅ wkg: $(wkg --version)"
        else
          echo "⚠️  wkg not installed"
        fi
        
        if command -v docker >/dev/null 2>&1; then
          echo "✅ Docker: $(docker --version)"
        else
          echo "⚠️  Docker not installed"
        fi

    - name: Summary
      shell: bash
      run: |
        echo "## 📋 FTL CLI Installation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **FTL CLI Version**: ${{ steps.verify.outputs.ftl-version }}" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Dependencies Installed**: ${{ inputs.install-dependencies }}" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Cached**: ${{ inputs.cache-dependencies }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🚀 **Ready to use**: `ftl --version` works!" >> $GITHUB_STEP_SUMMARY