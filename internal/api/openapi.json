{
  "openapi": "3.0.3",
  "info": {
    "title": "FTL AWS API",
    "version": "1.0.0",
    "description": "API for deploying and managing applications on the Fermyon Platform",
    "contact": {
      "name": "API Support",
      "email": "mashh.labs@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://vnwyancgjj.execute-api.us-west-2.amazonaws.com",
      "description": "Production API"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Apps",
      "description": "Multi-tenant application management with automatic provisioning"
    },
    {
      "name": "Registry",
      "description": "Multi-tenant ECR repository and credentials management"
    },
    {
      "name": "User",
      "description": "User and organization management endpoints"
    }
  ],
  "externalDocs": {
    "description": "Fermyon Platform Documentation",
    "url": "https://developer.fermyon.com/cloud"
  },
  "paths": {
    "/v1/apps": {
      "get": {
        "operationId": "listApps",
        "summary": "List applications",
        "description": "Retrieves all applications for the authenticated user. By default, only active (non-deleted) apps are returned.",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Filter by app name (partial match)",
              "type": "string"
            },
            "required": false,
            "description": "Filter by app name (partial match)"
          },
          {
            "in": "query",
            "name": "includeDeleted",
            "schema": {
              "description": "Include deleted apps in the response",
              "example": "false",
              "default": "false",
              "type": "string",
              "enum": ["true", "false"]
            },
            "required": false,
            "description": "Include deleted apps in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAppsResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createApp",
        "summary": "Create a new application",
        "description": "Creates a new application resource. The app can then be deployed by calling the deployment endpoint.",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Application created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAppResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - app name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}": {
      "get": {
        "operationId": "getApp",
        "summary": "Get application details",
        "description": "Retrieves detailed information for a specific application by ID",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "responses": {
          "200": {
            "description": "Application details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteApp",
        "summary": "Delete an application",
        "description": "Permanently deletes an application and triggers cleanup on the provider",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "responses": {
          "202": {
            "description": "Application deletion initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAppResponseBody"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}/deploy-credentials": {
      "post": {
        "operationId": "createDeployCredentials",
        "summary": "Create deployment credentials",
        "description": "Creates temporary credentials for deployment. Returns ECR registry credentials for pushing components and STS credentials for invoking the deployment function URL. The actual deployment is performed via the function URL returned in the response, not through this API.",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeployCredentialsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deployment credentials created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeployCredentialsResponseBody"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - app not owned by user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/info": {
      "get": {
        "operationId": "getUserInfo",
        "summary": "Get user information",
        "description": "Retrieves the authenticated user information and their organization memberships",
        "tags": ["User"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "User info retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfoResponseBody"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}/components": {
      "get": {
        "operationId": "listAppComponents",
        "summary": "List components for an app",
        "description": "Retrieves a list of all components for a specific application",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of components retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListComponentsResponseBody"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateComponents",
        "summary": "Update components for an app",
        "description": "Sets the desired state of components for an application. Components not in the list will be removed. This is an idempotent operation.",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComponentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Components updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateComponentsResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{appId}/logs": {
      "get": {
        "operationId": "getAppLogs",
        "summary": "Get application logs",
        "description": "Retrieves recent logs for an application from the underlying platform",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "description": "Bearer token for authentication",
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "path",
            "name": "appId",
            "schema": {
              "description": "Application ID (UUID)",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            },
            "required": true,
            "description": "Application ID (UUID)"
          },
          {
            "in": "query",
            "name": "since",
            "schema": {
              "description": "Time range for logs (e.g., \"30m\", \"1h\", \"7d\", or RFC3339/Unix timestamp)",
              "example": "1h",
              "default": "7d",
              "type": "string"
            },
            "required": false,
            "description": "Time range for logs (e.g., \"30m\", \"1h\", \"7d\", or RFC3339/Unix timestamp)"
          },
          {
            "in": "query",
            "name": "tail",
            "schema": {
              "description": "Number of log lines from the end (1-1000)",
              "example": "100",
              "default": "100",
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": false,
            "description": "Number of log lines from the end (1-1000)"
          }
        ],
        "responses": {
          "200": {
            "description": "Logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppLogsResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - app belongs to another tenant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateAppRequest": {
        "description": "Request body for creating an app",
        "type": "object",
        "properties": {
          "appName": {
            "description": "The name of the application",
            "type": "string",
            "minLength": 1,
            "maxLength": 63
          },
          "accessControl": {
            "description": "Access control mode for the application",
            "default": "private",
            "type": "string",
            "enum": ["public", "private", "org", "custom"]
          }
        },
        "required": ["appName"]
      },
      "CreateDeployCredentialsRequest": {
        "description": "Request body for creating deployment credentials",
        "type": "object",
        "properties": {
          "appId": {
            "description": "Application ID to create deployment credentials for",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "components": {
            "description": "Component names to create/ensure repositories for",
            "default": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["appId"]
      },
      "UpdateComponentsRequest": {
        "description": "Request body for updating components",
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "componentName": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 50,
                  "pattern": "^[a-zA-Z0-9_-]+$"
                },
                "description": {
                  "type": "string",
                  "maxLength": 500
                }
              },
              "required": ["componentName"]
            }
          }
        },
        "required": ["components"]
      },
      "ListAppsResponseBody": {
        "description": "List of applications",
        "type": "object",
        "properties": {
          "apps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "appId": {
                  "type": "string",
                  "format": "uuid",
                  "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                },
                "appName": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": ["PENDING", "CREATING", "ACTIVE", "FAILED", "DELETING", "DELETED"]
                },
                "providerUrl": {
                  "type": "string",
                  "format": "uri"
                },
                "providerError": {
                  "type": "string"
                },
                "accessControl": {
                  "type": "string",
                  "enum": ["public", "private", "org", "custom"]
                },
                "orgId": {
                  "type": "string"
                },
                "allowedRoles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "customAuth": {
                  "type": "object",
                  "properties": {
                    "issuer": {
                      "type": "string"
                    },
                    "audience": {
                      "type": "string"
                    }
                  },
                  "required": ["issuer", "audience"],
                  "additionalProperties": false
                },
                "latestDeployment": {
                  "description": "Latest deployment information for this app",
                  "type": "object",
                  "properties": {
                    "deploymentId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["pending", "deploying", "deployed", "failed", "rolled_back"]
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    },
                    "deployedAt": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "deploymentDuration": {
                      "type": "number"
                    }
                  },
                  "required": ["deploymentId", "status"],
                  "additionalProperties": false,
                  "nullable": true
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              },
              "required": ["appId", "appName", "status", "createdAt", "updatedAt"],
              "additionalProperties": false
            }
          }
        },
        "required": ["apps"],
        "additionalProperties": false
      },
      "ErrorResponse": {
        "description": "Standard error response format",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {}
          }
        },
        "required": ["message"],
        "additionalProperties": false
      },
      "CreateAppResponseBody": {
        "description": "Response for successful app creation",
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "CREATING", "ACTIVE", "FAILED", "DELETING", "DELETED"]
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": ["appId", "appName", "status", "createdAt", "updatedAt"],
        "additionalProperties": false
      },
      "App": {
        "description": "Application object",
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "CREATING", "ACTIVE", "FAILED", "DELETING", "DELETED"]
          },
          "providerUrl": {
            "type": "string",
            "format": "uri"
          },
          "providerError": {
            "type": "string"
          },
          "accessControl": {
            "type": "string",
            "enum": ["public", "private", "org", "custom"]
          },
          "orgId": {
            "type": "string"
          },
          "allowedRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customAuth": {
            "type": "object",
            "properties": {
              "issuer": {
                "type": "string"
              },
              "audience": {
                "type": "string"
              }
            },
            "required": ["issuer", "audience"],
            "additionalProperties": false
          },
          "latestDeployment": {
            "description": "Latest deployment information for this app",
            "type": "object",
            "properties": {
              "deploymentId": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": ["pending", "deploying", "deployed", "failed", "rolled_back"]
              },
              "statusMessage": {
                "type": "string"
              },
              "environment": {
                "type": "string"
              },
              "deployedAt": {
                "type": "number"
              },
              "createdAt": {
                "type": "number"
              },
              "deploymentDuration": {
                "type": "number"
              }
            },
            "required": ["deploymentId", "status"],
            "additionalProperties": false,
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": ["appId", "appName", "status", "createdAt", "updatedAt"],
        "additionalProperties": false
      },
      "DeleteAppResponseBody": {
        "description": "Response for successful app deletion",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"],
        "additionalProperties": false
      },
      "CreateDeployCredentialsResponseBody": {
        "description": "Deployment credentials response with registry and deployment access",
        "type": "object",
        "properties": {
          "registry": {
            "type": "object",
            "properties": {
              "registryUri": {
                "description": "ECR registry URI",
                "type": "string"
              },
              "authorizationToken": {
                "description": "ECR authorization token",
                "type": "string"
              },
              "proxyEndpoint": {
                "description": "ECR proxy endpoint",
                "type": "string"
              },
              "expiresAt": {
                "description": "ECR token expiration time",
                "type": "string"
              },
              "region": {
                "description": "AWS region",
                "type": "string"
              },
              "packageNamespace": {
                "description": "ECR namespace for components",
                "type": "string"
              }
            },
            "required": [
              "registryUri",
              "authorizationToken",
              "proxyEndpoint",
              "expiresAt",
              "region",
              "packageNamespace"
            ],
            "additionalProperties": false
          },
          "deployment": {
            "type": "object",
            "properties": {
              "functionUrl": {
                "description": "Lambda function URL for deployment",
                "type": "string"
              },
              "credentials": {
                "type": "object",
                "properties": {
                  "accessKeyId": {
                    "description": "AWS access key ID",
                    "type": "string"
                  },
                  "secretAccessKey": {
                    "description": "AWS secret access key",
                    "type": "string"
                  },
                  "sessionToken": {
                    "description": "AWS session token",
                    "type": "string"
                  },
                  "expiresAt": {
                    "description": "Credentials expiration time",
                    "type": "string"
                  }
                },
                "required": ["accessKeyId", "secretAccessKey", "sessionToken", "expiresAt"],
                "additionalProperties": false
              },
              "context": {
                "description": "Actor context for deployment",
                "type": "object",
                "properties": {
                  "userId": {
                    "description": "User ID (empty for machine actors)",
                    "type": "string"
                  },
                  "orgIds": {
                    "description": "Organization IDs (user: all their orgs, machine: single org)",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "actorType": {
                    "description": "Type of actor making the deployment",
                    "type": "string",
                    "enum": ["user", "machine"]
                  }
                },
                "required": ["userId", "orgIds", "actorType"],
                "additionalProperties": false
              }
            },
            "required": ["functionUrl", "credentials", "context"],
            "additionalProperties": false
          },
          "appId": {
            "description": "Application ID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          }
        },
        "required": ["registry", "deployment", "appId"],
        "additionalProperties": false
      },
      "GetUserInfoResponseBody": {
        "description": "User information with organizations",
        "type": "object",
        "properties": {
          "user": {
            "description": "User information",
            "type": "object",
            "properties": {
              "id": {
                "description": "User ID from WorkOS",
                "type": "string"
              },
              "email": {
                "description": "User email address",
                "type": "string",
                "nullable": true
              },
              "name": {
                "description": "User full name",
                "type": "string",
                "nullable": true
              }
            },
            "required": ["id", "email", "name"],
            "additionalProperties": false
          },
          "organizations": {
            "description": "List of organizations the user belongs to",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Organization ID from WorkOS",
                  "type": "string"
                },
                "name": {
                  "description": "Organization name",
                  "type": "string"
                }
              },
              "required": ["id", "name"],
              "additionalProperties": false
            }
          }
        },
        "required": ["user", "organizations"],
        "additionalProperties": false
      },
      "ListComponentsResponseBody": {
        "description": "List of components for an app",
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "appName": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "componentName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "repositoryUri": {
                  "type": "string"
                },
                "repositoryName": {
                  "type": "string"
                }
              },
              "required": ["componentName"],
              "additionalProperties": false
            }
          }
        },
        "required": ["appId", "appName", "components"],
        "additionalProperties": false
      },
      "UpdateComponentsResponseBody": {
        "description": "Response for successful components update",
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "componentName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "repositoryUri": {
                  "type": "string"
                },
                "repositoryName": {
                  "type": "string"
                }
              },
              "required": ["componentName"],
              "additionalProperties": false
            }
          },
          "changes": {
            "type": "object",
            "properties": {
              "created": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updated": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "removed": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": ["created", "updated", "removed"],
            "additionalProperties": false
          }
        },
        "required": ["components", "changes"],
        "additionalProperties": false
      },
      "GetAppLogsResponseBody": {
        "description": "Application logs response",
        "type": "object",
        "properties": {
          "appId": {
            "description": "Application ID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "logs": {
            "description": "Raw log output from the application",
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "tail": {
                "description": "Number of lines requested",
                "type": "number"
              },
              "since": {
                "description": "Time range used for the query",
                "type": "string"
              }
            },
            "required": ["tail", "since"],
            "additionalProperties": false
          }
        },
        "required": ["appId", "logs", "metadata"],
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "WorkOS JWT authentication token"
      }
    }
  }
}
