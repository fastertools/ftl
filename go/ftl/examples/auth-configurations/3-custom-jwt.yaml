# Custom JWT Provider
# Use Auth0, Okta, Keycloak, or any JWT provider

application:
  name: integrated-app
  version: "1.0.0"
  description: "App using existing auth system"

# Custom authentication - bring your own JWT provider
access: custom

# Configure your JWT provider
auth:
  # Your auth provider's issuer URL
  jwt_issuer: "https://dev-abc123.us.auth0.com/"
  
  # Your API identifier/audience
  jwt_audience: "https://api.mycompany.com"
  
  # Common provider examples:
  # Auth0:
  #   jwt_issuer: "https://YOUR_DOMAIN.auth0.com/"
  #   jwt_audience: "YOUR_API_IDENTIFIER"
  #
  # Okta:
  #   jwt_issuer: "https://YOUR_DOMAIN.okta.com/oauth2/default"
  #   jwt_audience: "api://default"
  #
  # Keycloak:
  #   jwt_issuer: "https://YOUR_DOMAIN/auth/realms/YOUR_REALM"
  #   jwt_audience: "YOUR_CLIENT_ID"
  #
  # AWS Cognito:
  #   jwt_issuer: "https://cognito-idp.REGION.amazonaws.com/USER_POOL_ID"
  #   jwt_audience: "YOUR_APP_CLIENT_ID"

components:
  - id: api-gateway
    source:
      registry: ghcr.io
      package: "custom:gateway"
      version: "3.0.0"
      
  - id: data-processor
    source:
      registry: ghcr.io
      package: "custom:processor"
      version: "3.0.0"

# When synthesized, this creates:
# - mcp-authorizer component
# - JWT issuer: Your specified issuer
# - JWT audience: Your specified audience
# - Users auth through YOUR existing auth system