name: Auto Tag Release

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write
  pull-requests: write  # Required to comment on PRs

jobs:
  auto-tag:
    name: Auto Tag on Release PR Merge
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Extract release info from PR title
        id: extract
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          
          # Extract component and version from PR title
          # Expected format: "Release: {Component} v{version}"
          if [[ "$PR_TITLE" =~ Release:\ (.+)\ v(.+) ]]; then
            COMPONENT="${BASH_REMATCH[1]}"
            VERSION="${BASH_REMATCH[2]}"
            
            # Normalize component name to tag format
            case "$COMPONENT" in
              "CLI")
                TAG="cli-v${VERSION}"
                ;;
              "Rust SDK")
                TAG="sdk-rust-v${VERSION}"
                ;;
              "TypeScript SDK")
                TAG="sdk-typescript-v${VERSION}"
                ;;
              *)
                # Assume it's a component name
                COMPONENT_LOWER=$(echo "$COMPONENT" | tr '[:upper:]' '[:lower:]')
                TAG="component-${COMPONENT_LOWER}-v${VERSION}"
                ;;
            esac
            
            echo "component=$COMPONENT" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            
            echo "Detected release: $COMPONENT v$VERSION"
            echo "Will create tag: $TAG"
          else
            echo "::error::Could not parse release information from PR title: $PR_TITLE"
            exit 1
          fi
      
      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Create and push tag
        env:
          TAG: ${{ steps.extract.outputs.tag }}
          VERSION: ${{ steps.extract.outputs.version }}
          COMPONENT: ${{ steps.extract.outputs.component }}
        run: |
          # Create annotated tag
          git tag -a "$TAG" -m "Release $COMPONENT v$VERSION

          Automated release from PR #${{ github.event.pull_request.number }}
          
          ${{ github.event.pull_request.body }}"
          
          # Push tag
          git push origin "$TAG"
          
          echo "âœ… Created and pushed tag: $TAG"
          echo "The release workflow will now be triggered automatically!"
      
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const tag = '${{ steps.extract.outputs.tag }}';
            const component = '${{ steps.extract.outputs.component }}';
            const version = '${{ steps.extract.outputs.version }}';
            
            const comment = `## ðŸŽ‰ Release Tagged!
            
            I've automatically created and pushed the release tag: \`${tag}\`
            
            ### What happens next:
            
            1. The release workflow has been triggered
            2. Artifacts will be built and published
            3. A GitHub release will be created
            4. Package registries will be updated
            
            ### Monitor progress:
            
            - [View workflow runs](https://github.com/${{ github.repository }}/actions)
            - [View releases](https://github.com/${{ github.repository }}/releases)
            
            Thank you for releasing ${component} v${version}! ðŸš€`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });