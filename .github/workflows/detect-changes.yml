name: Detect Changes

on:
  workflow_call:
    outputs:
      cli:
        description: "CLI source files changed"
        value: ${{ jobs.detect.outputs.cli }}
      rust-sdk:
        description: "Rust SDK files changed"
        value: ${{ jobs.detect.outputs.rust-sdk }}
      typescript-sdk:
        description: "TypeScript SDK files changed"
        value: ${{ jobs.detect.outputs.typescript-sdk }}
      components:
        description: "Any component files changed"
        value: ${{ jobs.detect.outputs.components }}
      mcp-authorizer:
        description: "MCP authorizer component changed"
        value: ${{ jobs.detect.outputs.mcp-authorizer }}
      mcp-gateway:
        description: "MCP gateway component changed"
        value: ${{ jobs.detect.outputs.mcp-gateway }}
      core-crates:
        description: "Core crates changed (affects everything)"
        value: ${{ jobs.detect.outputs.core-crates }}
      go-sdk:
        description: "Go SDK files changed"
        value: ${{ jobs.detect.outputs.go-sdk }}
      python-sdk:
        description: "Python SDK files changed"
        value: ${{ jobs.detect.outputs.python-sdk }}
      ci:
        description: "CI workflow files changed"
        value: ${{ jobs.detect.outputs.ci }}

jobs:
  detect:
    name: Detect Changed Files
    runs-on: ubuntu-latest
    outputs:
      cli: ${{ steps.detect.outputs.cli }}
      rust-sdk: ${{ steps.detect.outputs.rust-sdk }}
      typescript-sdk: ${{ steps.detect.outputs.typescript-sdk }}
      components: ${{ steps.detect.outputs.components }}
      mcp-authorizer: ${{ steps.detect.outputs.mcp-authorizer }}
      mcp-gateway: ${{ steps.detect.outputs.mcp-gateway }}
      core-crates: ${{ steps.detect.outputs.core-crates }}
      go-sdk: ${{ steps.detect.outputs.go-sdk }}
      python-sdk: ${{ steps.detect.outputs.python-sdk }}
      ci: ${{ steps.detect.outputs.ci }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Detect changed files
        id: detect
        run: |
          # Get the base and head commits
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            # For push events, compare with the previous commit
            BASE_SHA="${{ github.event.before }}"
            HEAD_SHA="${{ github.event.after }}"
            
            # If this is the first commit, compare with empty tree
            if [[ "$BASE_SHA" == "0000000000000000000000000000000000000000" ]]; then
              BASE_SHA=$(git hash-object -t tree /dev/null)
            fi
          fi
          
          echo "Comparing $BASE_SHA..$HEAD_SHA"
          
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA" || true)
          
          # Function to check if any file matches patterns
          check_changes() {
            local patterns="$1"
            local changed=false
            
            while IFS= read -r pattern; do
              if echo "$CHANGED_FILES" | grep -qE "$pattern"; then
                changed=true
                break
              fi
            done <<< "$patterns"
            
            echo "$changed"
          }
          
          # Check each category
          # Go CLI patterns - includes cmd, internal, pkg, and shared directories
          cli_patterns="^cmd/ftl/
          ^internal/
          ^pkg/
          ^go/
          ^go\.mod$
          ^go\.sum$"
          CLI_CHANGED=$(check_changes "$cli_patterns")
          echo "cli=$CLI_CHANGED" >> $GITHUB_OUTPUT
          
          rust_sdk_patterns="^sdk/rust/
          ^sdk/rust-macros/"
          RUST_SDK_CHANGED=$(check_changes "$rust_sdk_patterns")
          echo "rust-sdk=$RUST_SDK_CHANGED" >> $GITHUB_OUTPUT
          
          typescript_sdk_patterns="^sdk/typescript/"
          TYPESCRIPT_SDK_CHANGED=$(check_changes "$typescript_sdk_patterns")
          echo "typescript-sdk=$TYPESCRIPT_SDK_CHANGED" >> $GITHUB_OUTPUT
          
          components_patterns="^components/
          ^\.cargo/config\.toml$
          ^Cargo\.toml$
          ^Cargo\.lock$"
          COMPONENTS_CHANGED=$(check_changes "$components_patterns")
          echo "components=$COMPONENTS_CHANGED" >> $GITHUB_OUTPUT
          
          mcp_auth_patterns="^components/mcp-authorizer/"
          MCP_AUTH_CHANGED=$(check_changes "$mcp_auth_patterns")
          echo "mcp-authorizer=$MCP_AUTH_CHANGED" >> $GITHUB_OUTPUT
          
          mcp_gw_patterns="^components/mcp-gateway/"
          MCP_GW_CHANGED=$(check_changes "$mcp_gw_patterns")
          echo "mcp-gateway=$MCP_GW_CHANGED" >> $GITHUB_OUTPUT
          
          # No more crates directory - set to false
          CORE_CHANGED="false"
          echo "core-crates=$CORE_CHANGED" >> $GITHUB_OUTPUT
          
          go_sdk_patterns="^sdk/go/"
          GO_SDK_CHANGED=$(check_changes "$go_sdk_patterns")
          echo "go-sdk=$GO_SDK_CHANGED" >> $GITHUB_OUTPUT
          
          python_sdk_patterns="^sdk/python/"
          PYTHON_SDK_CHANGED=$(check_changes "$python_sdk_patterns")
          echo "python-sdk=$PYTHON_SDK_CHANGED" >> $GITHUB_OUTPUT
          
          ci_patterns="^\.github/workflows/"
          CI_CHANGED=$(check_changes "$ci_patterns")
          echo "ci=$CI_CHANGED" >> $GITHUB_OUTPUT
          
          # Debug output
          echo "::group::Changed files"
          echo "$CHANGED_FILES"
          echo "::endgroup::"
          
          echo "::group::Detection results"
          echo "CLI changed: $CLI_CHANGED"
          echo "Rust SDK changed: $RUST_SDK_CHANGED"
          echo "TypeScript SDK changed: $TYPESCRIPT_SDK_CHANGED"
          echo "Go SDK changed: $GO_SDK_CHANGED"
          echo "Python SDK changed: $PYTHON_SDK_CHANGED"
          echo "Components changed: $COMPONENTS_CHANGED"
          echo "MCP Authorizer changed: $MCP_AUTH_CHANGED"
          echo "MCP Gateway changed: $MCP_GW_CHANGED"
          echo "Core crates changed: $CORE_CHANGED"
          echo "CI changed: $CI_CHANGED"
          echo "::endgroup::"