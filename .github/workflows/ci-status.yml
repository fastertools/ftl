name: CI Status

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  # First, detect what changed
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      ci: ${{ steps.filter.outputs.ci }}
      cli: ${{ steps.filter.outputs.cli }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            ci:
              - 'cli/**'
              - 'crates/**'
              - 'components/**'
              - 'sdk/**'
              - 'Cargo.toml'
              - 'Cargo.lock'
              - '.github/workflows/ci.yml'
              - '.github/workflows/detect-changes.yml'
            cli:
              - 'cli/**'
              - 'crates/**'
              - 'components/**'
              - 'sdk/**'
              - 'Cargo.toml'
              - 'Cargo.lock'
              - '.github/workflows/test-cli.yml'
              - 'templates/**'

  # Run CI if needed
  ci:
    name: Run CI
    needs: changes
    if: needs.changes.outputs.ci == 'true'
    uses: ./.github/workflows/ci.yml
  
  # Run CLI tests if needed
  cli-tests:
    name: Run CLI Tests
    needs: changes
    if: needs.changes.outputs.cli == 'true'
    uses: ./.github/workflows/test-cli.yml
  
  # The single required status check
  status:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [changes, ci, cli-tests]
    if: always()
    steps:
      - name: Check All Jobs
        run: |
          echo "CI Status Summary:"
          echo "=================="
          
          # Check if any changes require CI
          if [ "${{ needs.changes.outputs.ci }}" == "true" ]; then
            if [ "${{ needs.ci.result }}" == "success" ]; then
              echo "✅ CI: passed"
            else
              echo "❌ CI: ${{ needs.ci.result }}"
            fi
          else
            echo "⏭️  CI: skipped (no relevant changes)"
          fi
          
          # Check if any changes require CLI tests
          if [ "${{ needs.changes.outputs.cli }}" == "true" ]; then
            if [ "${{ needs.cli-tests.result }}" == "success" ]; then
              echo "✅ CLI Tests: passed"
            else
              echo "❌ CLI Tests: ${{ needs.cli-tests.result }}"
            fi
          else
            echo "⏭️  CLI Tests: skipped (no relevant changes)"
          fi
          
          # Overall status - only fail if a job that should have run failed
          if [ "${{ needs.changes.outputs.ci }}" == "true" ] && [ "${{ needs.ci.result }}" != "success" ]; then
            echo ""
            echo "❌ CI checks failed"
            exit 1
          fi
          
          if [ "${{ needs.changes.outputs.cli }}" == "true" ] && [ "${{ needs.cli-tests.result }}" != "success" ]; then
            echo ""
            echo "❌ CLI tests failed"
            exit 1
          fi
          
          echo ""
          echo "✅ All checks passed!"