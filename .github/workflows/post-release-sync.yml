name: Post-Release Version Sync

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run mode'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-rust-crates:
    name: Sync Rust Crate Versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          
      - name: Sync rust-macros version to match rust SDK
        run: |
          echo "Syncing Rust crate versions..."
          
          # Get rust SDK version from manifest
          RUST_VERSION=$(jq -r '."sdk/rust"' .release-please-manifest.json)
          
          # Update rust-macros version to match
          sed -i "s/^version = \".*\"/version = \"$RUST_VERSION\"/" sdk/rust-macros/Cargo.toml
          
          # Update the dependency in rust SDK to use exact version
          sed -i "s/ftl-sdk-macros = { version = \"=[^\"]*\"/ftl-sdk-macros = { version = \"=$RUST_VERSION\"/" sdk/rust/Cargo.toml
          
          # Check if there are changes
          if git diff --exit-code; then
            echo "‚úÖ Rust crate versions already in sync"
            exit 0
          fi
          
          echo "üìù Rust crate versions updated"
          
      - name: Create PR with updates
        if: ${{ github.event_name == 'release' || inputs.dry_run == false }}
        run: |
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create branch
          BRANCH="chore/sync-scaffold-versions-$(date +%Y%m%d%H%M%S)"
          git checkout -b "$BRANCH"
          
          # Commit changes
          git add sdk/rust-macros/Cargo.toml sdk/rust/Cargo.toml
          git commit -m "chore: sync Rust crate versions

          Updates ftl-sdk-macros version to match ftl-sdk after releases.
          
          This ensures both crates maintain version parity."
          
          # Push branch
          git push origin "$BRANCH"
          
          # Create PR
          gh pr create \
            --title "chore: sync Rust crate versions post-release" \
            --body "## Summary
          
          This PR synchronizes the ftl-sdk-macros version with ftl-sdk.
          
          ### Changes
          - Updated \`sdk/rust-macros/Cargo.toml\` version to match \`sdk/rust\`
          - Updated dependency reference to use exact version matching
          
          ### Why
          These two crates must maintain version parity for compatibility.
          
          ---
          *This PR was automatically generated after a release.*" \
            --label "chore" \
            --label "dependencies"
        env:
          GH_TOKEN: ${{ secrets.PAT }}