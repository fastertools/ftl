name: Sync Versions in Release PRs

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'sdk/rust/Cargo.toml'

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-rust-versions:
    if: contains(github.event.pull_request.labels.*.name, 'autorelease: pending')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Sync Rust crate versions
        run: |
          # Extract version from sdk/rust/Cargo.toml in the PR
          SDK_VERSION=$(grep '^version = ' sdk/rust/Cargo.toml | head -1 | cut -d'"' -f2)
          MACROS_VERSION=$(grep '^version = ' sdk/rust-macros/Cargo.toml | head -1 | cut -d'"' -f2)
          
          echo "ftl-sdk version in PR: $SDK_VERSION"
          echo "ftl-sdk-macros version: $MACROS_VERSION"
          
          if [[ "$SDK_VERSION" != "$MACROS_VERSION" ]]; then
            echo "Syncing ftl-sdk-macros to version $SDK_VERSION"
            
            # Update rust-macros version to match
            sed -i "s/^version = \".*\"/version = \"$SDK_VERSION\"/" sdk/rust-macros/Cargo.toml
            
            # Ensure the dependency uses exact version
            sed -i "s/ftl-sdk-macros = { version = \"[^\"]*\"/ftl-sdk-macros = { version = \"=$SDK_VERSION\"/" sdk/rust/Cargo.toml
            
            # Check if there are changes
            if git diff --exit-code; then
              echo "No changes needed"
            else
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git add sdk/rust/Cargo.toml sdk/rust-macros/Cargo.toml
              git commit -m "chore: sync rust-macros version to $SDK_VERSION [automated]"
              git push
              echo "✅ Pushed version sync"
            fi
          else
            echo "✅ Versions already in sync"
          fi