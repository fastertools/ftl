name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  # First, detect what changed
  changes:
    name: Detect Changes
    uses: ./.github/workflows/detect-changes.yml

  lint:
    name: Lint
    needs: changes
    if: needs.changes.outputs.cli == 'true' || needs.changes.outputs.rust-sdk == 'true' || needs.changes.outputs.core-crates == 'true' || needs.changes.outputs.ci == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-dev
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  test-and-coverage:
    name: Test & Coverage
    needs: changes
    if: needs.changes.outputs.cli == 'true' || needs.changes.outputs.rust-sdk == 'true' || needs.changes.outputs.core-crates == 'true' || needs.changes.outputs.ci == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-dev
      
      - name: Install Rust with llvm-tools
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Install cargo-llvm-cov and nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov,nextest
      
      - name: Run tests with coverage
        run: |
          # Run tests with coverage in one command
          cargo llvm-cov nextest --all-features --profile ci
          
          # Generate coverage report and extract percentage
          COVERAGE=$(cargo llvm-cov report | tail -1 | awk '{print $4}' | sed 's/%//')
          echo "Coverage: ${COVERAGE}%"
          
          # Fail if coverage drops below 80%
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "::error::Coverage ${COVERAGE}% is below required 80%"
            exit 1
          else
            echo "::notice::Coverage ${COVERAGE}% meets the 80% requirement"
          fi

  security:
    name: Security Audit
    needs: changes
    if: needs.changes.outputs.cli == 'true' || needs.changes.outputs.rust-sdk == 'true' || needs.changes.outputs.core-crates == 'true' || needs.changes.outputs.ci == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-dev
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-audit
        uses: taiki-e/install-action@cargo-audit
      - name: Run security audit
        run: cargo audit

  wasm:
    name: WebAssembly Components
    needs: changes
    if: needs.changes.outputs.components == 'true' || needs.changes.outputs.ci == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.86.0
          target: wasm32-wasip1
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-wasm-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-wasm-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target/wasm32-wasip1
          key: ${{ runner.os }}-cargo-build-wasm-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Install cargo-component
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-component
      
      - name: Build WebAssembly components
        run: |
          cargo build-wasm --release
          
      - name: Verify WebAssembly artifacts
        run: |
          # Verify the expected WASM files were built
          ls -la target/wasm32-wasip1/release/mcp_authorizer.wasm
          ls -la target/wasm32-wasip1/release/ftl_mcp_gateway.wasm
          echo "WebAssembly components built successfully"
